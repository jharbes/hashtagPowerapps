Nome do usuario:

User().FullName

Imagem do Usuario:

User().Image



---------------------------------------------------------------------------



Mudar de tela:

Navigate(nome_da_tela)


--------------------------------------------------------------------------------------------------------------


Atualiza lista de sharepoint de dentro do aplicativo PowerApps:

Patch(listaTeste,Defaults(listaTeste),
{
    Nome: txtNome.Text,
    Cargo: txtCargo.Text,
    Salario: Value(txtSalario.Text)
})



outra maneira:


Insert -> Edit Form -> Conectar o Form ao banco de dados (tabela) necessário e excluir os campos indesejados

Criar um botão para submit que deve ter o comando no OnSelect: SubmitForm(Form1)  (onde Form1 é o nome do formulário)

Criar um botão (ou ícone de +) para que seja adicionado novos itens na tabela e preencher no OnSelect -> NewForm(Form1)


--------------------------------------------------------------------------------------------------------------

Para carregar os itens existentes da tabela do sharepoint no formulário Edit Form faremos o seguinte:

Dentro do formulário (selecionamos ele) procuramos pela propriedade 'Item' no menu dropdown que fica no canto Superior a esquerda

Preenchemos com Gallery1.Selected	(onde Gallery1 é o nome da galeria onde estão os itens da lista desejada)



Devemos colocar o formulário com o modo padrão para novo , para que seu default seja incluir novos funcionários e não editar os existentes

Para isso selecionamos o formulário, vamos nas opções da aba a Direita -> 'Properties' -> 'Default Mode' -> 'New'

Depois disso temos que fazer uma alteração para que possamos editar os dados dos funcionários:

Clicamos em um dos itens da lista -> Opção 'OnSelect' no menu dropdown superior a esquerda -> preencher: Select(Parent);EditForm(Form1)

No botão de submit do formulário também devemos atualizar para que sempre que for clicado para salvar algo volte ao estado inicial em branco de NewForm, para isso preenchemos na Opção 'OnSelect' no menu dropdown superior a esquerda -> SubmitForm(Form1);NewForm(Form1)
--------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------

adicionar em data o connector de email Office365Outlook


Office365Outlook.SendEmailV2(
    
        txtResponsavel.Text,
        "Problema reportado a respeito do produto" & Dropdown2.Selected.nome,
        txtDescricao.Text
    
);



Rich text messages
https://www.matthewdevaney.com/power-apps-send-email-using-outlook-the-complete-guide/#Email-Rich-Text-Messages

---------------------------------------------------------------------------


Cria linha na lista de sharepoint de dentro do aplicativo PowerApps, com mensagem de sucesso no final,
funciona como criação de linha (novo item):

Patch(listaTeste,Defaults(listaTeste),
{
    Nome: txtNome.Text,
    Cargo: txtCargo.Text,
    Salario: Value(txtSalario.Text)
});

Notify("Funcionário cadastrado com sucesso!")


---------------------------------------------------------------------------


Patch(vistoria, Defaults(vistoria),
{
    placa: Dropdown1.Selected.placa,
    eletrica: toggle_eletrica.Value,
    iluminacao: toggle_iluminacao.Value,
    motor: toggle_motor.Value,
    freio: toggle_freio.Value,
    pneu: toggle_pneus.Value,
    observacao: txt_observacoes.Text
});

Patch(veiculo, LookUp(veiculo, placa = Dropdown1.Selected.placa), 
{
    status: If(toggle_eletrica.Value && toggle_iluminacao.Value && toggle_motor.Value && toggle_freio.Value && toggle_pneus.Value, "Apto", "Não Apto")
});

Notify("Vistoria adicionada com sucesso!")


---------------------------------------------------------------------------


Patch(produtos, Defaults(produtos),
{
    nome: TextInput2.Text,
    foto: Camera1.Photo,
    quantidade_estoque: 0
});

Notify("Produto cadastrado com sucesso!");

Reset(TextInput2);


-----------------------------------------------------------------------------


MOSTRANDO E RECOLHENDO POP-UP


NO VISIBLE DO CONTAINER POP-UP:

Container1.Visible=var_produto_selecionado


NO BOTAO QUE DEVE ABRIR O POP-UP:

UpdateContext({var_produto_selecionado: true})


NO BOTAO QUE DEVE FECHAR O POP-UP:

UpdateContext({var_produto_selecionado: false})


-----------------------------------------------------------------------------

ADICIONANDO BING MAPAS:

Ir em Menu Superior -> 'Add Data/Adicionar Dados' -> 'Bing Maps/Bing Mapas' -> 'Add a connection' -> Preencher o campo 'API Key/Chave de API'

Para encontrar a chave do API ir no google e pesquisar bing mapas api key -> 'Bing Maps Dev Center' -> 'Sign In'

Já feito o login ir na opção do Menu Superior -> 'My account' -> 'My keys' -> 'Create a new Key'

Pegar a chave criada e colar no 'API Key' do PowerApps


TRANSFORMANDO O ENDEREÇO:

Antes de dar submit no formulario 'SubmitForm(equip_form)' no campo 'OnSelect' incluiremos um comando do Bing Mapas para converter o endereço na longitude e latitude:

Set(var_endereco,
	BingMaps.GetLocationByAddress(
	{
    	adressLine: 'endereco.txt'.Text & " " & 'endereco_numero.txt'.Text, // endereco
    	locality:"", // cidade
    	adminDistrict:"", // UF 
    	postalCode: 'cep.txt'.Text, // cep
    	countryRegion: "BRA" // pais
	})
);


Set(
    LocationResult,
    BingMaps.GetLocationByAddress(
        {
            addressLine: "1600 Amphitheatre Parkway",
            locality: "Mountain View",
            postalCode: "94043",
            region: "CA",
            countryRegion: "US"
        }
    )
);



Patch(equipament_app_vistoria,Defaults(equipament_app_vistoria),{
    modelo:'modelo.txt'.Text,
    tipo_equipamento:'tipo_equipamento.txt'.Text,
    marca:'marca.txt'.Text,
    serial_number:'serial_number.txt'.Text,
    endereco:'endereco.txt'.Text,
    endereco_numero:'endereco_numero.txt'.Text,
    cidade:"",
    estado:"",
    cep:'cep.txt'.Text,
    longitude:var_endereco.point.coordinates.longitude,
    latitude:var_endereco.point.coordinates.latitude
});

ResetForm(equip_form);

NewForm(equip_form)


ADICIONANDO A IMAGEM:

Ir no Menu Superior -> 'Insert' -> 'Image'

na linha de comandos opção 'Image' da imagem preencher com o comando:

BingMaps.GetMapV2(
	"AerialWithLabels", // tipo de mapa
	18, // zoom
	gallery_equipment.Selected.latitude, // latitude
	gallery_equipment.Selected.longitude // longitude
)


Incluindo slider para alterar o zoom:

Incluir o slider (Menu Superior -> 'Input' -> 'Slider') na tela atual proximo à imagem do Bing

Ajustar o minimo e maximo do Slider entre 1 e 19, colocar o default value para 18

Desmarcar a opção 'Exibir Valor'/'Show Value' , pois os numeros em si de 1 a 19 nao fazem sentido para o usuario

Voltar na opção 'Image' da imagem para reeditar o comando e colocar assim:

BingMaps.GetMapV2(
	"AerialWithLabels", // tipo de mapa
	slider_zoom.Value, // zoom
	gallery_equipment.Selected.latitude, // latitude
	gallery_equipment.Selected.longitude // longitude
)


